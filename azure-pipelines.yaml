variables:
 - group: azurecreds

trigger:
- main

stages:
- stage: Provision
  jobs:
  - job: TerraformTasks
    displayName: Terraform Tasks
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: DownloadSecureFile@1
      displayName: Download azurecreds.conf file
      name: azurecreds
      inputs:
        secureFile: 'azurecreds.conf'

    - task: InstallSSHKey@0
      displayName: Install SSH key
      inputs:
        knownHostsEntry: 'known_hosts'
        sshPublicKey: '$(public_key)'
        sshKeySecureFile: 'id_rsa'
    
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          ls /home/vsts/work/_temp/

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          ls home

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          ls /home/adminuser/.ssh/authorized_keys/

    - task: CopyFiles@2
      displayName: Copy & paste ida_rsa
      inputs:
        #SourceFolder: $(Agent.TempDirectory)
        SourceFolder: '/home/vsts/work/_temp/'
        Contents: 'id_rsa.pub'
        TargetFolder: '.ssh/authorized_keys/'

    #- task: Bash@3
    #  inputs:
    #    targetType: 'inline'
    #    script: |
    #      mkdir ~/.ssh
    #      chmod 700 ~/.ssh
    #      touch ~/.ssh/authorized_keys
    #      chmod 600 ~/.ssh/authorized_keys
    #      cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys

    - task: TerraformInstaller@0
      displayName: Terraform Install
      inputs:
        terraformVersion: '1.0.0'

    - task: TerraformTaskV2@2
      displayName: Terraform Init
      inputs:
        provider: 'azurerm'
        command: 'init'
        commandOptions: '-backend-config=$(azurecreds.secureFilePath)'
        backendServiceArm: 'azurerm-sc'
        backendAzureRmResourceGroupName: 'tstate'
        backendAzureRmStorageAccountName: 'tstate26325'
        backendAzureRmContainerName: 'tstate'
        backendAzureRmKey: 'test.terraform.tfstate'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

    - task: AzureCLI@1
      displayName: Set Environment Variables for Terraform
      inputs:
        azureSubscription: azurerm-sc
        scriptLocation: inlineScript
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        addSpnToEnvironment: true
        inlineScript: |
            export ARM_CLIENT_ID=$(client_id)
            export ARM_CLIENT_SECRET=$(client_secret)
            export ARM_SUBSCRIPTION_ID=$(subscription_id)
            export ARM_TENANT_ID=$(tenant_id)
    
    - task: TerraformTaskV2@2
      displayName: Terraform Apply
      inputs:
        provider: 'azurerm'
        command: 'apply'
        commandOptions: '-auto-approve'
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
        environmentServiceNameAzureRM: 'azurerm-sc'
